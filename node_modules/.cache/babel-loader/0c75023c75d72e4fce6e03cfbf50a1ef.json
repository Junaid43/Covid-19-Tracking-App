{"ast":null,"code":"var _jsxFileName = \"/Users/muhammadjunaid/React-Project/coronatracker/src/components/Chart/Chart.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from \"../../api\";\nimport styles from \"./Chart.module.css\";\nimport { Line, Bar } from \"react-chartjs-2\";\n\nconst Chart = ({\n  data,\n  country\n}) => {\n  const [dailyData, setDailyData] = useState([]); //same like state { dailydata} and setdailydata set value\n\n  console.log(data);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    fetchAPI();\n  }, [dailyData]);\n  const lineChart = dailyData.length ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: \"Infected\",\n        borderColor: \"#3333ff\",\n        fill: \"true\"\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: \"Deaths\",\n        borderColor: \"red\",\n        fill: \"true\",\n        backgroundColor: \"rgba(255,0,0,0.5)\"\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 10\n    }\n  }, lineChart, \" \");\n};\n\nexport default Chart;","map":{"version":3,"sources":["/Users/muhammadjunaid/React-Project/coronatracker/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","styles","Line","Bar","Chart","data","country","dailyData","setDailyData","console","log","fetchAPI","lineChart","length","labels","map","date","datasets","confirmed","label","borderColor","fill","deaths","backgroundColor","container"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAuB;AACnC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C,CADmC,CACa;;AAChDW,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACAN,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,QAAQ,GAAG,YAAY;AAC3BH,MAAAA,YAAY,CAAC,MAAMR,cAAc,EAArB,CAAZ;AACD,KAFD;;AAGAW,IAAAA,QAAQ;AACT,GALQ,EAKN,CAACJ,SAAD,CALM,CAAT;AAOA,QAAMK,SAAS,GAAGL,SAAS,CAACM,MAAV,gBAChB,oBAAC,IAAD;AACE,IAAA,IAAI,EAAE;AACJC,MAAAA,MAAM,EAAEP,SAAS,CAACQ,GAAV,CAAc,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAcA,IAA5B,CADJ;AAEJC,MAAAA,QAAQ,EAAE,CACR;AACEZ,QAAAA,IAAI,EAAEE,SAAS,CAACQ,GAAV,CAAc,CAAC;AAAEG,UAAAA;AAAF,SAAD,KAAmBA,SAAjC,CADR;AAEEC,QAAAA,KAAK,EAAE,UAFT;AAGEC,QAAAA,WAAW,EAAE,SAHf;AAIEC,QAAAA,IAAI,EAAE;AAJR,OADQ,EAOR;AACEhB,QAAAA,IAAI,EAAEE,SAAS,CAACQ,GAAV,CAAc,CAAC;AAAEO,UAAAA;AAAF,SAAD,KAAgBA,MAA9B,CADR;AAEEH,QAAAA,KAAK,EAAE,QAFT;AAGEC,QAAAA,WAAW,EAAE,KAHf;AAIEC,QAAAA,IAAI,EAAE,MAJR;AAKEE,QAAAA,eAAe,EAAE;AALnB,OAPQ;AAFN,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADgB,GAqBd,IArBJ;AAuBA,sBAAO;AAAK,IAAA,SAAS,EAAEtB,MAAM,CAACuB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCZ,SAAnC,MAAP;AACD,CAlCD;;AAmCA,eAAeR,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from \"../../api\";\nimport styles from \"./Chart.module.css\";\nimport { Line, Bar } from \"react-chartjs-2\";\n\nconst Chart = ({ data, country }) => {\n  const [dailyData, setDailyData] = useState([]); //same like state { dailydata} and setdailydata set value\n  console.log(data);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n    fetchAPI();\n  }, [dailyData]);\n\n  const lineChart = dailyData.length ? (\n    <Line\n      data={{\n        labels: dailyData.map(({ date }) => date),\n        datasets: [\n          {\n            data: dailyData.map(({ confirmed }) => confirmed),\n            label: \"Infected\",\n            borderColor: \"#3333ff\",\n            fill: \"true\",\n          },\n          {\n            data: dailyData.map(({ deaths }) => deaths),\n            label: \"Deaths\",\n            borderColor: \"red\",\n            fill: \"true\",\n            backgroundColor: \"rgba(255,0,0,0.5)\",\n          },\n        ],\n      }}\n    />\n  ) : null;\n\n  return <div className={styles.container}>{lineChart} </div>;\n};\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}