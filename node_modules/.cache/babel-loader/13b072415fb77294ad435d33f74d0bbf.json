{"ast":null,"code":"var _jsxFileName = \"/Users/muhammadjunaid/React-Project/coronatracker/src/components/Chart/Chart.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from \"../../api\";\nimport styles from \"./Chart.module.css\";\nimport { Line, Bar } from \"react-chartjs-2\";\n\nconst Chart = () => {\n  const [dailyData, setDailyData] = useState({}); //same like state { dailydata} and setdailydata set value\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    fetchAPI();\n  }, [dailyData]);\n  const lineChart = dailyData[0] ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData(({\n          confirmed\n        }) => confirmed),\n        label: \"Infected\",\n        borderColor: \"#3333ff\",\n        fill: \"true\"\n      }, {}]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 10\n    }\n  }, \"Chart\");\n};\n\nexport default Chart;","map":{"version":3,"sources":["/Users/muhammadjunaid/React-Project/coronatracker/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","styles","Line","Bar","Chart","dailyData","setDailyData","fetchAPI","lineChart","labels","date","datasets","data","confirmed","label","borderColor","fill"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C,CADkB,CAC8B;;AAEhDC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,QAAQ,GAAG,YAAY;AAC3BD,MAAAA,YAAY,CAAC,MAAMN,cAAc,EAArB,CAAZ;AACD,KAFD;;AAGAO,IAAAA,QAAQ;AACT,GALQ,EAKN,CAACF,SAAD,CALM,CAAT;AAOA,QAAMG,SAAS,GAAGH,SAAS,CAAC,CAAD,CAAT,gBAChB,oBAAC,IAAD;AACE,IAAA,IAAI,EAAE;AACJI,MAAAA,MAAM,EAAEJ,SAAS,CAAC,CAAC;AAAEK,QAAAA;AAAF,OAAD,KAAcA,IAAf,CADb;AAEJC,MAAAA,QAAQ,EAAE,CACR;AACEC,QAAAA,IAAI,EAAEP,SAAS,CAAC,CAAC;AAAEQ,UAAAA;AAAF,SAAD,KAAmBA,SAApB,CADjB;AAEEC,QAAAA,KAAK,EAAE,UAFT;AAGEC,QAAAA,WAAW,EAAE,SAHf;AAIEC,QAAAA,IAAI,EAAE;AAJR,OADQ,EAOR,EAPQ;AAFN,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADgB,GAed,IAfJ;AAiBA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACD,CA5BD;;AA8BA,eAAeZ,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from \"../../api\";\nimport styles from \"./Chart.module.css\";\nimport { Line, Bar } from \"react-chartjs-2\";\n\nconst Chart = () => {\n  const [dailyData, setDailyData] = useState({}); //same like state { dailydata} and setdailydata set value\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n    fetchAPI();\n  }, [dailyData]);\n\n  const lineChart = dailyData[0] ? (\n    <Line\n      data={{\n        labels: dailyData(({ date }) => date),\n        datasets: [\n          {\n            data: dailyData(({ confirmed }) => confirmed),\n            label: \"Infected\",\n            borderColor: \"#3333ff\",\n            fill: \"true\",\n          },\n          {},\n        ],\n      }}\n    />\n  ) : null;\n\n  return <h1>Chart</h1>;\n};\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}