{"ast":null,"code":"var _jsxFileName = \"/Users/muhammadjunaid/React-Project/coronatracker/src/components/Chart/Chart.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from \"../../api\";\nimport styles from \"./Chart.module.css\";\nimport { Line, Bar } from \"react-chartjs-2\";\n\nconst Chart = ({\n  data: {\n    confirmed,\n    deaths,\n    recoverd\n  },\n  country\n}) => {\n  const [dailyData, setDailyData] = useState([]); //same like state { dailydata} and setdailydata set value\n\n  console.log(data);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    fetchAPI();\n  }, [dailyData]);\n  const lineChart = dailyData.length ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        data\n      }) => data),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: \"Infected\",\n        borderColor: \"#3333ff\",\n        fill: \"true\"\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: \"Deaths\",\n        borderColor: \"red\",\n        fill: \"true\",\n        backgroundColor: \"rgba(255,0,0,0.5)\"\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }) : null;\n  const barChart = confirmed ? /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      label: [\"Infected\", \"Recovered\", \"Deaths\"],\n      datasets: [{\n        label: \"People\",\n        backgroundColor: [\"rgba(0, 0, 255, 0.5)\", \"rgba(0, 255, 0, 0.5)\", \"rgba(255, 0, 0, 0.5)\"],\n        data: [confirmed, deaths, recoverd]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Current State is ${country} `\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, country ? barChart : lineChart, \" \");\n};\n\nexport default Chart;","map":{"version":3,"sources":["/Users/muhammadjunaid/React-Project/coronatracker/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","styles","Line","Bar","Chart","data","confirmed","deaths","recoverd","country","dailyData","setDailyData","console","log","fetchAPI","lineChart","length","labels","map","datasets","label","borderColor","fill","backgroundColor","barChart","legend","display","title","text","container"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,MAAb;AAAqBC,IAAAA;AAArB,GAAR;AAAyCC,EAAAA;AAAzC,CAAD,KAAwD;AACpE,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,EAAD,CAA1C,CADoE,CACpB;;AAChDc,EAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AACAN,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,QAAQ,GAAG,YAAY;AAC3BH,MAAAA,YAAY,CAAC,MAAMX,cAAc,EAArB,CAAZ;AACD,KAFD;;AAGAc,IAAAA,QAAQ;AACT,GALQ,EAKN,CAACJ,SAAD,CALM,CAAT;AAOA,QAAMK,SAAS,GAAGL,SAAS,CAACM,MAAV,gBAChB,oBAAC,IAAD;AACE,IAAA,IAAI,EAAE;AACJC,MAAAA,MAAM,EAAEP,SAAS,CAACQ,GAAV,CAAc,CAAC;AAAEb,QAAAA;AAAF,OAAD,KAAcA,IAA5B,CADJ;AAEJc,MAAAA,QAAQ,EAAE,CACR;AACEd,QAAAA,IAAI,EAAEK,SAAS,CAACQ,GAAV,CAAc,CAAC;AAAEZ,UAAAA;AAAF,SAAD,KAAmBA,SAAjC,CADR;AAEEc,QAAAA,KAAK,EAAE,UAFT;AAGEC,QAAAA,WAAW,EAAE,SAHf;AAIEC,QAAAA,IAAI,EAAE;AAJR,OADQ,EAOR;AACEjB,QAAAA,IAAI,EAAEK,SAAS,CAACQ,GAAV,CAAc,CAAC;AAAEX,UAAAA;AAAF,SAAD,KAAgBA,MAA9B,CADR;AAEEa,QAAAA,KAAK,EAAE,QAFT;AAGEC,QAAAA,WAAW,EAAE,KAHf;AAIEC,QAAAA,IAAI,EAAE,MAJR;AAKEC,QAAAA,eAAe,EAAE;AALnB,OAPQ;AAFN,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADgB,GAqBd,IArBJ;AAuBA,QAAMC,QAAQ,GAAGlB,SAAS,gBACxB,oBAAC,GAAD;AACE,IAAA,IAAI,EAAE;AACJc,MAAAA,KAAK,EAAE,CAAC,UAAD,EAAa,WAAb,EAA0B,QAA1B,CADH;AAEJD,MAAAA,QAAQ,EAAE,CACR;AACEC,QAAAA,KAAK,EAAE,QADT;AAEEG,QAAAA,eAAe,EAAE,CACf,sBADe,EAEf,sBAFe,EAGf,sBAHe,CAFnB;AAOElB,QAAAA,IAAI,EAAE,CAACC,SAAD,EAAYC,MAAZ,EAAoBC,QAApB;AAPR,OADQ;AAFN,KADR;AAeE,IAAA,OAAO,EAAE;AACPiB,MAAAA,MAAM,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OADD;AAEPC,MAAAA,KAAK,EAAE;AAAED,QAAAA,OAAO,EAAE,IAAX;AAAiBE,QAAAA,IAAI,EAAG,oBAAmBnB,OAAQ;AAAnD;AAFA,KAfX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADwB,GAqBtB,IArBJ;AAsBA,sBACE;AAAK,IAAA,SAAS,EAAER,MAAM,CAAC4B,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCpB,OAAO,GAAGe,QAAH,GAAcT,SAAxD,MADF;AAGD,CA1DD;;AA2DA,eAAeX,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from \"../../api\";\nimport styles from \"./Chart.module.css\";\nimport { Line, Bar } from \"react-chartjs-2\";\n\nconst Chart = ({ data: { confirmed, deaths, recoverd }, country }) => {\n  const [dailyData, setDailyData] = useState([]); //same like state { dailydata} and setdailydata set value\n  console.log(data);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n    fetchAPI();\n  }, [dailyData]);\n\n  const lineChart = dailyData.length ? (\n    <Line\n      data={{\n        labels: dailyData.map(({ data }) => data),\n        datasets: [\n          {\n            data: dailyData.map(({ confirmed }) => confirmed),\n            label: \"Infected\",\n            borderColor: \"#3333ff\",\n            fill: \"true\",\n          },\n          {\n            data: dailyData.map(({ deaths }) => deaths),\n            label: \"Deaths\",\n            borderColor: \"red\",\n            fill: \"true\",\n            backgroundColor: \"rgba(255,0,0,0.5)\",\n          },\n        ],\n      }}\n    />\n  ) : null;\n\n  const barChart = confirmed ? (\n    <Bar\n      data={{\n        label: [\"Infected\", \"Recovered\", \"Deaths\"],\n        datasets: [\n          {\n            label: \"People\",\n            backgroundColor: [\n              \"rgba(0, 0, 255, 0.5)\",\n              \"rgba(0, 255, 0, 0.5)\",\n              \"rgba(255, 0, 0, 0.5)\",\n            ],\n            data: [confirmed, deaths, recoverd],\n          },\n        ],\n      }}\n      options={{\n        legend: { display: false },\n        title: { display: true, text: `Current State is ${country} ` },\n      }}\n    />\n  ) : null;\n  return (\n    <div className={styles.container}>{country ? barChart : lineChart} </div>\n  );\n};\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}